Projede kullanilan teknonojiler

1.Springboot
2.Akka(actor base yapi kuruldu)
3.Rabbitmq
4.postgresql
5.phantomjs 
------------------------------------------------------

Projeden kisaca bahsedecek olursam .

Request geldiginde datayi rabbitmq ' ya atiyorum baska bir sinif ile consume edip aktör'e gönderiyorum aktör hali hazirda 3 worker a dagitiyor isi,
sonrasinda her worker yapmasi gereken siteye girip ekran görüntüsünü alip veritabanina kayit etmekte.

Ekra görüntüsü biraz zorladi beni ilk selenium vs toollar kullandim  , sonrasinda phantomjs gördüm arastiriken bunun ile kolaylikla bu iside hallettim.
Veritabanina cok onem vermedim dediginiz gibi ama imageleri saklamakta biraz ugrastim enson her ekran görüntsünü base64 stringe cevirirp veritabanina kayit ettim.

-----------------------------------------------------------------------
Soru ile alakali


 "Sizden ayni zamanda yapmis oldugunuz servisin sonrasinda enterprise olmasi durumunda
1.000.000 a kadar çikacak bir URL listesini nasil scale edebileceginize dair kisa bir özet yazmanizi
bekliyoruz."

Bu soru için ise projede akka kullandim . Bildiginiz üzere es zamanli n tane objenin birbirinden bagimsiz sekilde çalismasina olanak sagliyor.
Suan 3 worker çalisiyor projede bunu genisletebiliriz.


------------------------------------------------------
Proje çalistirilmadan önce yapilmasi gerekenler :

1. Postgresql kurulmasi lazim 
2. Rabbitmq kurulmasi lazim
3. phantomjs indirilmesi lazim (ilgili os indirip belirlediğiniz dzine koyun : http://phantomjs.org/download.html ,
  sonrasında ScreenShoter sınıfında 29. satıra dizini set edin)



bunlar kuruldukdan sonra 

proje altindaki application.properties dosyasinin içinde gerekli postgresql ve rabbitmq konfigurasyonlari doldurulmali

rabbitmq exchange : screen   topic ismi : screen-data  projeye tanimladi.

TAble script : 

CREATE TABLE public.screenshot_website (
	id varchar(255) NOT NULL,
	creation_date timestamp NULL,
	creation_user varchar(255) NULL,
	deleted bool NULL,
	last_update_date timestamp NULL,
	last_update_user varchar(255) NULL,
	site_url varchar(255) NOT NULL,
	site_image varchar(10000) NOT NULL,
	site_description varchar(255) NULL,
	CONSTRAINT challenge_pkey PRIMARY KEY (id)
)


--------------------------------------------------------------------------------
Run :

eclipse için goals kismina yazarsaniz calisir.
clean install spring-boot:run

konsoldan ise build alindiginda target altina cikarilan jar dosyasini 
ilgili dizene gidip
 java -jar projename.jar    
 derseniz calisir


-------------------------------------------------------

Rest paths:

create site scrrenShot
POST
http://localhost:8034/create-site-screenshot
body:
{
	"siteUrlList":["http://turkishh.com","http://www.4dsight.com"]
	
}


get site screenShot
GET
http://localhost:8034/by/www.turkishh.com



--------------------------------------------------------------------





